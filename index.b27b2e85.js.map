{"mappings":"AAAA,MAAMA,EAAOC,IACX,IACE,MAAMC,EAAQC,aAAaC,QAAQH,GACnC,OAAiB,OAAVC,OAAiBG,EAAYC,KAAKC,MAAML,E,CAC/C,MAAOM,GACPC,QAAQD,MAAM,kBAAmBA,EAAME,Q,GAGrCC,EAAO,CAACV,EAAKW,KACjB,IACE,MAAMV,EAAQI,KAAKO,UAAUD,GAC7BT,aAAaW,QAAQb,EAAKC,E,CAC1B,MAAOM,GACPC,QAAQD,MAAM,kBAAmBA,EAAME,Q,GAGrCK,EAASd,IACb,IACEE,aAAaa,WAAWf,E,CACxB,MAAOO,GACPC,QAAQD,MAAM,kBAAmBA,EAAME,Q,GChBrCO,EAAO,CACXC,UAAWC,SAASC,cAAc,cAClCC,SAAUF,SAASC,cAAc,0BACjCE,QAASH,SAASC,cAAc,yBAChCG,SAAUJ,SAASC,cAAc,2BAiHnC,MAAMI,EAAQ,IA9Gd,MAcEC,OACEC,KAAKC,OAAOD,KAAKE,oB,CAGnBC,kBACE,MAAMC,EAAa9B,EA5BL,eA6BV8B,IACFJ,KAAKK,OAASD,EAAWC,OACzBL,KAAKM,UAAYF,EAAWG,MAC5BP,KAAKQ,UAAYJ,EAAWK,MAE5BT,KAAKC,OAAOD,KAAKE,kBAAkBF,KAAKQ,YAEpCR,KAAKK,QACPL,KAAKU,yB,CAKXC,gBACE1B,EA3Cc,cA2CE,CACdoB,OAAQL,KAAKK,OACbE,MAAOP,KAAKM,UACZG,MAAOT,KAAKQ,W,CAIhBE,yBACEV,KAAKM,UAAYM,KAAKC,MAAQb,KAAKQ,UACnCR,KAAKc,QAAUC,aAAY,KACzB,MAAMC,EAAcJ,KAAKC,MACzBb,KAAKQ,UAAYQ,EAAchB,KAAKM,UAEpCN,KAAKC,OAAOD,KAAKE,kBAAkBF,KAAKQ,YACxCR,KAAKW,eAAe,GACnB,I,CAGLJ,QAEMP,KAAKK,SAETL,KAAKK,QAAS,EAEdL,KAAKM,UAAYM,KAAKC,MAAQb,KAAKQ,UAEnCR,KAAKW,gBAGLX,KAAKc,QAAUC,aAAY,KACzB,MAAMC,EAAcJ,KAAKC,MAEzBb,KAAKQ,UAAYQ,EAAchB,KAAKM,UACpC,MAAMW,EAAOjB,KAAKE,kBAAkBF,KAAKQ,WAEzCR,KAAKC,OAAOgB,GAEZjB,KAAKW,eAAe,GACnB,K,CAGLO,OACEC,cAAcnB,KAAKc,SACnBd,KAAKc,QAAU,KACfd,KAAKK,QAAS,EAEdL,KAAKW,gBACLX,KAAKC,OAAOD,KAAKE,kBAAkBF,KAAKQ,W,CAG1CY,QACED,cAAcnB,KAAKc,SACnBd,KAAKc,QAAU,KACfd,KAAKK,QAAS,EACdL,KAAKM,UAAY,EACjBN,KAAKQ,UAAY,EAEjBnB,EApGc,eAqGdW,KAAKC,OAAOD,KAAKE,oB,CAGnBA,kBAAkBe,EAAO,GAOvB,MAAO,C,MANOjB,KAAKqB,IACjBC,KAAKC,MAAMN,EAAS,MAAyB,O,KAElCjB,KAAKqB,IAAIC,KAAKC,MAAMN,EAAS,KAAoB,M,KACjDjB,KAAKqB,IAAIC,KAAKC,MAAMN,EAAS,IAAc,M,CAK1DI,IAAInC,GACF,OAAOsC,OAAOtC,GAAOuC,SAAS,EAAG,I,CAzGnCC,aAAYzB,OAAEA,IACZD,KAAKc,QAAU,KACfd,KAAKK,QAAS,EAEdL,KAAKM,UAAY,EACjBN,KAAKQ,UAAY,EAEjBR,KAAKC,OAASA,EAEdD,KAAKD,OACLC,KAAKG,iB,GAmGe,CACtBF,OAcF,UAA8B0B,MAAEA,EAAKC,KAAEA,EAAIC,KAAEA,IAC3CtC,EAAKC,UAAUsC,YAAc,UAAUH,cAAkBC,cAAiBC,G,IAZ5EtC,EAAKI,SAASoC,iBAAiB,SAAS,KACtCjC,EAAMS,OAAO,IAGfhB,EAAKK,QAAQmC,iBAAiB,SAAS,KACrCjC,EAAMoB,MAAM,IAEd3B,EAAKM,SAASkC,iBAAiB,SAAS,KACtCjC,EAAMsB,OAAO","sources":["src/js/storage.js","src/script.js"],"sourcesContent":["const load = key => {\r\n  try {\r\n    const state = localStorage.getItem(key);\r\n    return state === null ? undefined : JSON.parse(state);\r\n  } catch (error) {\r\n    console.error('Get state error', error.message);\r\n  }\r\n};\r\nconst save = (key, value) => {\r\n  try {\r\n    const state = JSON.stringify(value);\r\n    localStorage.setItem(key, state);\r\n  } catch (error) {\r\n    console.error('Get state error', error.message);\r\n  }\r\n};\r\nconst remove = key => {\r\n  try {\r\n    localStorage.removeItem(key);\r\n  } catch (error) {\r\n    console.error('Get state error', error.message);\r\n  }\r\n};\r\n\r\nexport { load, save, remove };\r\n","import { load, save, remove } from './js/storage';\r\n\r\nconst TIMER_KEY = 'timer-state';\r\n\r\nconst refs = {\r\n  clockface: document.querySelector('.clockface'),\r\n  startBtn: document.querySelector('.timer-btn[data-start]'),\r\n  stopBtn: document.querySelector('.timer-btn[data-stop]'),\r\n  clearBtn: document.querySelector('.timer-btn[data-clear]'),\r\n};\r\n\r\nclass Timer {\r\n  constructor({ onTick }) {\r\n    this.timerId = null;\r\n    this.active = false;\r\n\r\n    this.startTime = 0;\r\n    this.deltaTime = 0;\r\n\r\n    this.onTick = onTick;\r\n\r\n    this.init();\r\n    this.loadStateFromLS();\r\n  }\r\n  //The method displays a default time\r\n  init() {\r\n    this.onTick(this.getTimeComponents());\r\n  }\r\n\r\n  loadStateFromLS() {\r\n    const savedState = load(TIMER_KEY);\r\n    if (savedState) {\r\n      this.active = savedState.active;\r\n      this.startTime = savedState.start;\r\n      this.deltaTime = savedState.delta;\r\n\r\n      this.onTick(this.getTimeComponents(this.deltaTime));\r\n\r\n      if (this.active) {\r\n        this.resumeTimerAfterReload();\r\n      }\r\n    }\r\n  }\r\n\r\n  saveStateToLS() {\r\n    save(TIMER_KEY, {\r\n      active: this.active,\r\n      start: this.startTime,\r\n      delta: this.deltaTime,\r\n    });\r\n  }\r\n\r\n  resumeTimerAfterReload() {\r\n    this.startTime = Date.now() - this.deltaTime;\r\n    this.timerId = setInterval(() => {\r\n      const currentTime = Date.now();\r\n      this.deltaTime = currentTime - this.startTime;\r\n\r\n      this.onTick(this.getTimeComponents(this.deltaTime));\r\n      this.saveStateToLS();\r\n    }, 1000);\r\n  }\r\n\r\n  start() {\r\n    //Prevent multiple timer starts\r\n    if (this.active) return;\r\n    //Change the state to active\r\n    this.active = true;\r\n\r\n    this.startTime = Date.now() - this.deltaTime;\r\n    //Save state to localStorage timer start working\r\n    this.saveStateToLS();\r\n\r\n    //Refresh markup every 1 sec\r\n    this.timerId = setInterval(() => {\r\n      const currentTime = Date.now();\r\n\r\n      this.deltaTime = currentTime - this.startTime;\r\n      const time = this.getTimeComponents(this.deltaTime);\r\n\r\n      this.onTick(time);\r\n      //Update state after each tick\r\n      this.saveStateToLS();\r\n    }, 1000);\r\n  }\r\n\r\n  stop() {\r\n    clearInterval(this.timerId);\r\n    this.timerId = null;\r\n    this.active = false;\r\n    //Save to stage localStorage after press stop btn\r\n    this.saveStateToLS();\r\n    this.onTick(this.getTimeComponents(this.deltaTime));\r\n  }\r\n\r\n  clear() {\r\n    clearInterval(this.timerId);\r\n    this.timerId = null;\r\n    this.active = false;\r\n    this.startTime = 0;\r\n    this.deltaTime = 0;\r\n    //Clear locaStorage;\r\n    remove(TIMER_KEY);\r\n    this.onTick(this.getTimeComponents());\r\n  }\r\n  // The methods converts time(milliseconds) to other values, such as hours, minutes and seconds\r\n  getTimeComponents(time = 0) {\r\n    const hours = this.pad(\r\n      Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\r\n    );\r\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\r\n\r\n    return { hours, mins, secs };\r\n  }\r\n  //The methods adds 0 to the number if the string has < 2 characters\r\n  pad(value) {\r\n    return String(value).padStart(2, '0');\r\n  }\r\n}\r\n\r\nconst timer = new Timer({\r\n  onTick: updateTimerInterface,\r\n});\r\n\r\nrefs.startBtn.addEventListener('click', () => {\r\n  timer.start();\r\n});\r\n\r\nrefs.stopBtn.addEventListener('click', () => {\r\n  timer.stop();\r\n});\r\nrefs.clearBtn.addEventListener('click', () => {\r\n  timer.clear();\r\n});\r\n\r\nfunction updateTimerInterface({ hours, mins, secs }) {\r\n  refs.clockface.textContent = `Hours: ${hours} Minutes: ${mins} Seconds: ${secs}`;\r\n}\r\n"],"names":["$3fff5e8daf4b13a6$export$11e63f7b0f3d9900","key","state","localStorage","getItem","undefined","JSON","parse","error","console","message","$3fff5e8daf4b13a6$export$a1544dad697b423d","value","stringify","setItem","$3fff5e8daf4b13a6$export$cd7f480d6b8286c3","removeItem","$2aac3885343dc6b2$var$refs","clockface","document","querySelector","startBtn","stopBtn","clearBtn","$2aac3885343dc6b2$var$timer","init","this","onTick","getTimeComponents","loadStateFromLS","savedState","active","startTime","start","deltaTime","delta","resumeTimerAfterReload","saveStateToLS","Date","now","timerId","setInterval","currentTime","time","stop","clearInterval","clear","pad","Math","floor","String","padStart","constructor","hours","mins","secs","textContent","addEventListener"],"version":3,"file":"index.b27b2e85.js.map"}